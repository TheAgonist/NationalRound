{
  "name": "midievents",
  "version": "1.0.1",
  "description": "Decode/encode MIDI events.",
  "main": "./src/MIDIEvents",
  "author": {
    "name": "Nicolas Froidure"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/nfroidure/MIDIEvents.git"
  },
  "engines": {
    "node": "*"
  },
  "devDependencies": {
    "browserify": "~12.0.2",
    "coveralls": "~2.11.6",
    "eslint": "^1.10.3",
    "eslint-config-simplifield": "^1.2.0",
    "istanbul": "~0.4.1",
    "matchdep": "~1.0.0",
    "mocha": "~2.3.4",
    "mocha-lcov-reporter": "1.0.0"
  },
  "scripts": {
    "test": "mocha tests/*.mocha.js",
    "coveralls": "istanbul cover _mocha --report lcovonly -- tests/*.mocha.js -R spec -t 5000 && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "cover": "istanbul cover _mocha --report html -- tests/*.mocha.js -R spec -t 5000",
    "lint": "eslint src/*.js tests/*.js",
    "preversion": "npm test && npm run lint",
    "build": "browserify -s MIDIEvents src/MIDIEvents.js > dist/MIDIEvents.js"
  },
  "keywords": [
    "sound",
    "music",
    "midi",
    "event",
    "events",
    "encode",
    "decode"
  ],
  "testling": {
    "harness": "mocha",
    "files": "tests/*.mocha.js",
    "browsers": [
      "ie/6..latest",
      "chrome/22..latest",
      "firefox/16..latest",
      "safari/latest",
      "opera/11.0..latest",
      "iphone/6",
      "ipad/6",
      "android-browser/latest"
    ]
  },
  "readme": "# MIDIEvents\n> MIDIEvents is a module intended to help working with MIDI events.\n\nMIDIEvents is the base project for [MIDIFile](https://github.com/nfroidure/MIDIFile)\n and [MIDIPlayer](https://github.com/nfroidure/MIDIPlayer). You can also check\n this [Karaoke Player](http://karaoke.insertafter.com) built on top of those\n libraries.\n\n[![NPM version](https://badge.fury.io/js/midievents.svg)](https://npmjs.org/package/midievents)\n [![Build status](https://secure.travis-ci.org/nfroidure/MIDIEvents.svg)](https://travis-ci.org/nfroidure/MIDIEvents)\n [![Dependency Status](https://david-dm.org/nfroidure/midievents.svg)](https://david-dm.org/nfroidure/midievents)\n [![devDependency Status](https://david-dm.org/nfroidure/midievents/dev-status.svg)](https://david-dm.org/nfroidure/midievents#info=devDependencies)\n [![Coverage Status](https://coveralls.io/repos/nfroidure/MIDIEvents/badge.svg?branch=master)](https://coveralls.io/r/nfroidure/MIDIEvents?branch=master)\n\nMIDIEvents can be used either in modern browsers\n ([pick the last bundle](https://github.com/nfroidure/MIDIEvents/blob/master/dist/MIDIEvents.js))\n or with NodeJS by installing the following\n [NPM module](https://npmjs.org/package/midievents) :\n```bash\nnpm install midievents\n```\n\n## Browser support\n[![Build Status](https://ci.testling.com/nfroidure/midievents.svg)](https://ci.testling.com/nfroidure/MIDIEvents)\n\n## What it does\n* Decode MIDI events\n* Check MIDI events (using strictMode)\n*\tCalculate needed buffer to encode MIDI events\n*\tEncode MIDI events\n\n## What it doesn't do\n*\tReading MIDI files. It's the role of the\n [MIDIFile project](https://github.com/nfroidure/MIDIFile).\n* Playing MIDI files. It's the role of the\n [MIDIPlayer project](https://github.com/nfroidure/MIDIPlayer).\n\n## Usage\n```js\n// Your variable with an ArrayBuffer instance containing your MIDI events\nvar anyBuffer;\n\n// Parse MIDI events\nvar events = [];\nvar parser = new MIDIEvents.createParser(new DataView(anyBuffer), 0, false);\nvar event = parser.next();\n\ndo {\n  events.push(event);\n  event = parser.next();\n} while(event);\n\n// Check bufffer size before encoding\nif(anyBuffer.length >= MIDIEvents.getRequiredBufferLength(events)) {\n  console.log('ok');\n}\n\n// Encode MIDI events\nvar destination = new Uint8Array(anyBuffer);\nMIDIEvents.writeToTrack(events, destination);\n\n```\n\n## Contributing / Testing\nInstall them and run the following command :\n\n```bash\nnpm install --dev\nsu npm install grunt-cli -g\ngrunt test\n```\n\n## Contributing\n* Feel free to PR\n* If you find MIDI events the library can't read, create a test an do a pull\n request. I'll work on it asap.\n* Run `npm run` to get a list of useful development commands.\n\n## License\nCopyright Nicolas Froidure. MIT licence.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nfroidure/MIDIEvents/issues"
  },
  "_id": "midievents@1.0.1",
  "dist": {
    "shasum": "74c7a909e61b689d43a90c143b4d8830b4994e17"
  },
  "_from": "midievents@^1.0.1",
  "_resolved": "https://registry.npmjs.org/midievents/-/midievents-1.0.1.tgz"
}
